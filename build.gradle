/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenLocal()

    maven {
        name 'papermc'
        url 'https://repo.papermc.io/repository/maven-public/'
    }

    maven {
        url = uri 'https://repo.maven.apache.org/maven2/'
    }
    mavenCentral()
}

dependencies {
    implementation 'org.freemarker:freemarker:2.3.31'
    implementation 'commons-io:commons-io:2.11.0'

    compileOnly 'de.timesnake:database-proxy:1.0-SNAPSHOT'
    compileOnly 'de.timesnake:database-api:1.0-SNAPSHOT'

    compileOnly 'de.timesnake:channel-proxy:1.0-SNAPSHOT'
    compileOnly 'de.timesnake:channel-api:1.0-SNAPSHOT'

    compileOnly 'de.timesnake:library-extension:1.0-SNAPSHOT'
    compileOnly 'de.timesnake:library-basic:1.0-SNAPSHOT'

    compileOnly 'com.velocitypowered:velocity-api:3.1.1'
    annotationProcessor 'com.velocitypowered:velocity-api:3.1.1'
}

group = 'de.timesnake'
version = '1.0-SNAPSHOT'
description = 'library-network'
java.sourceCompatibility = 1.17
java.targetCompatibility = 1.17

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }

        mavenJavaAll(MavenPublication) {
            version version + '-all'
            artifact {
                file "build/libs/" + description + "-" + version + ".jar"
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task buildFatJar(type: Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    baseName = rootProject.name
    classifier = "all"
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

jar.finalizedBy(buildFatJar)
